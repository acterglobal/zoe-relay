name: Docker Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'crates/relay/**'
      - '.github/workflows/docker.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/zoe-relay

jobs:

  docker-compose-test:
    name: Docker Compose Integration Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create test environment file
        run: |
          cat > .env << EOF
          ZOERELAY_EXTERNAL_ADDRESSES=test.example.com
          ZOERELAY_INTERFACE=0.0.0.0
          ZOERELAY_PORT=13908
          ZOERELAY_NAME=Test Relay Server
          ZOERELAY_DATA_DIR=/app/data
          ZOERELAY_REDIS_URL=redis://redis:6379
          ZOE_DATA_PATH=./zoe-relay-data
          REDIS_DATA_PATH=./zoe-redis-data
          RUST_LOG=info
          EOF

      - name: Start services with staging docker compose
        run: |
          # Start services using the staging compose file
          docker compose --env-file .env up -d

      - name: Wait for services to be ready
        run: |
          cd .github
          echo "Waiting for Redis to be ready..."
          timeout 60 bash -c 'until docker compose exec -T redis redis-cli ping; do sleep 2; done'
          
          echo "Waiting for Zoe Relay to be ready..."
          timeout 120 bash -c 'until docker compose logs zoe-relay | grep -q "Starting Zoe Relay Server"; do sleep 2; done'

      - name: Test Redis connectivity
        run: |
          cd .github
          echo "Testing Redis connectivity..."
          docker compose exec -T redis redis-cli ping
          docker compose exec -T redis redis-cli info server

      - name: Test port accessibility
        run: |
          echo "Testing if relay port is accessible..."
          timeout 10 bash -c 'until nc -z localhost 13908; do sleep 1; done' || exit 1
          echo "Port 13908 is accessible"

      - name: Test service health checks
        run: |
          echo "Checking service health status..."
          docker compose ps
          
          # Check if services are healthy
          docker compose ps | grep -q "healthy" || echo "Health checks not yet complete"


      - name: Show final logs for debugging
        if: failure()
        run: |
          cd .github
          echo "=== Zoe Relay Logs ==="
          docker compose logs zoe-relay
          echo "=== Redis Logs ==="
          docker compose logs redis
          echo "=== Container Status ==="
          docker compose ps

      - name: Cleanup
        if: always()
        run: |
          cd .github
          docker compose down -v
          docker system prune -f
          rm -rf ../test-data ../test-redis-data