name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-rust-cross-platform
      - name: Check all targets
        run: cargo check --workspace --all-targets

  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-rust-cross-platform
        with:
          components: rustfmt,clippy

      - name: Check formatting
        run: cargo fmt --all -- --check
        
      - name: Run clippy
        run: cargo clippy --workspace --all-targets -- -D warnings

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: rustsec/audit-check@v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ignore: RUSTSEC-2023-0071  # we are not using sqlx-mysql

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for codecov to properly track git history
          
      - uses: ./.github/actions/setup-rust-cross-platform
        with:
          components: llvm-tools-preview
          tools: cargo-llvm-cov,cargo-nextest

      - name: Generate code coverage
        run: |
          cargo llvm-cov clean --workspace
          cargo llvm-cov nextest --workspace --lcov --output-path coverage.lcov
        env:
          REDIS_URL: redis://localhost:6379

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: coverage.lcov
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  compile-targets-zoe-client:
    name: Zoe Client Compile
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Apple targets - run on macOS
          - target: aarch64-apple-ios
            os: macos-latest
          - target: x86_64-apple-ios
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          # Android targets - run on Linux
          - target: aarch64-linux-android
            os: ubuntu-latest
            include_android_ndk: true
          - target: armv7-linux-androideabi
            os: ubuntu-latest
            include_android_ndk: true
          - target: x86_64-linux-android
            os: ubuntu-latest
            include_android_ndk: true
          - target: i686-linux-android
            os: ubuntu-latest
            include_android_ndk: true
          # Linux targets - run on Linux
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          # Windows targets - run on Windows
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: i686-pc-windows-msvc
            os: windows-latest
          - target: x86_64-pc-windows-gnu
            os: windows-latest
          
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-rust-cross-platform
        with:
          targets: ${{ matrix.target }}
          include_android_ndk: ${{ matrix.include_android_ndk }}
          
      - name: Cross compile zoe-client for ${{ matrix.target }}
        run: |
          cargo build --release --target ${{ matrix.target }} --package zoe-client


  test-rust-toolchains:
    name: Tests on extra toolchains
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, beta, nightly]
    
    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-rust-cross-platform
        with:
          tools: cargo-nextest

      - name: Run fast tests
        run: |
          cargo nextest run --profile ci --workspace
        env:
          REDIS_URL: redis://localhost:6379