[package]
name = "zoe-client"
version = "0.1.0"
edition = "2024"

[[example]]
name = "full"
required-features = ["cli"]

[[bin]]
name = "zoe-system-check"
required-features = ["cli"]

[features]
default = ["frb-api",]
mls = ["dep:openmls", "dep:openmls_rust_crypto", "dep:openmls_basic_credential", "dep:openmls_memory_storage"]
frb-api = [
    "dep:flutter_rust_bridge", "dep:extend", "tokio/net",
    "zoe-app-primitives/frb-api", "zoe-wire-protocol/frb-api"
]
test-utils = []
mock = ["zoe-client-storage/mock", "dep:mockall"]
cli = ["clap", "tracing-subscriber"]

[dependencies]
# Wire protocol for crypto utilities
zoe-wire-protocol = { path = "../wire-protocol", features = ["client"] }

# Storage dependencies
zoe-encrypted-storage = { path = "../encrypted-storage" }
zoe-blob-store = { path = "../blob-store" }
zoe-app-primitives = { path = "../app-primitives" }
zoe-client-storage = { path = "../client-storage" }
zoe-state-machine = { path = "../state-machine" }

# Flutter Rust Bridge (optional)
flutter_rust_bridge = { workspace = true, optional = true }

# Async runtime
tokio = { workspace = true, features = ["io-util"] }
tokio-util = { workspace = true }
tokio-stream = { workspace = true }
futures = { workspace = true }
rand = { workspace = true }
async-once-cell = { workspace = true }

# Logging
tracing = { workspace = true }

# QUIC and TLS support
quinn = { workspace = true }
rustls = { workspace = true }

# Cryptographic dependencies
libcrux-ml-dsa = { workspace = true }
ed25519-dalek = { workspace = true }
signature = { workspace = true }
chacha20poly1305 = "0.10"
blake3 = { workspace = true }

# Additional utilities
hex = { workspace = true }
async-trait = { workspace = true }
async-stream = { workspace = true }
eyeball = { version = "0.8", features = ["async-lock"] }

# Mock support for testing
mockall = { workspace = true, optional = true }

# MLS dependencies for encrypted messaging
openmls = { version = "0.7", optional = true }
openmls_rust_crypto = { version = "0.4", optional = true }
openmls_basic_credential = { version = "0.4", optional = true }
openmls_memory_storage = { version = "0.4", optional = true }

serde = { workspace = true }
tls_codec = { version = "0.4", optional = true }
postcard = { workspace = true }
uuid = { workspace = true }

# Error types for documentation examples
thiserror = { workspace = true }

# RPC and futures for relay service traits
tarpc = { workspace = true }
anyhow = { workspace = true }

# Temporary directory support for deprecated methods
tempfile = { workspace = true }

extend = { workspace = true, optional = true }

# CLI support
clap = { workspace = true, optional = true }
tracing-subscriber = { workspace = true, optional = true }

# System check dependencies
crc32fast = { workspace = true }

[dev-dependencies]
# Testing framework
tokio-test = { workspace = true }
tokio = { workspace = true, features = ["test-util", "macros", "rt-multi-thread"] }
zoe-client-storage = { path = "../client-storage", features = ["mock"] }
mockall = { workspace = true }

# End-to-end testing dependencies
zoe-relay = { path = "../relay" }
zoe-message-store = { path = "../message-store" }

anyhow = { workspace = true }
tracing-subscriber = { workspace = true }
env_logger = { workspace = true }
tempfile = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
postcard = { workspace = true }
bip39 = "2.1"



[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(frb_expand)'] }