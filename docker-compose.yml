# Docker Compose for Zoe Relay Server
# Production-ready setup with Redis and persistent storage

services:
  zoe-relay:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - zoe-redis
    ports:
      - "${ZOERELAY_PORT:-13908}:13908/udp"
    environment:
      # Network configuration
      - ZOERELAY_PORT=13908
      - ZOERELAY_INTERFACE=0.0.0.0
      - ZOERELAY_EXTERNAL_ADDRESSES=${ZOERELAY_EXTERNAL_ADDRESSES:-localhost}
      - ZOERELAY_NAME=${ZOERELAY_NAME:-Zoe Relay Server}
      # Logging
      - RUST_LOG=${RUST_LOG:-info}
      - ZOERELAY_REDIS_URL=${ZOERELAY_REDIS_URL:-redis://zoe-redis:6379}
    volumes:
      # Persistent storage for server keys and blob data
      - zoe_data:/app/data
      # Optional: custom configuration
      # - ./config:/app/config:ro
    healthcheck:
      test: ["CMD-SHELL", "timeout 5 bash -c '</dev/udp/localhost/13908' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  zoe-redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - zoe_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  # Persistent storage for relay server data (keys, blobs, etc.)
  zoe_data:
    driver: local
  
  # Persistent storage for Redis data
  zoe_redis_data:
    driver: local